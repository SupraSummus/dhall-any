--- dhall-lang/standard/substitution.md	2020-04-05 15:25:43.717586781 +0200
+++ build/semantics_raw/substitution.md	2020-04-05 18:13:47.227624442 +0200
@@ -75,11 +75,11 @@
 Substitution avoids bound variables by increasing the index when a new bound
 variable of the same name is in scope, like this:
 
-
-    …   b₀[x@(1 + n) ≔ e₁] = b₁   …
-    ───────────────────────────────
-    …
-
+```
+…   b₀[x@(1 + n) ≔ e₁] = b₁   …
+───────────────────────────────
+…
+```
 
 Substitution also avoids variable capture, like this:
 
@@ -89,11 +89,11 @@
 in when *any* new bound variable (not just the variable to substitute) is in
 scope, like this:
 
-
-    …   ↑(1, y, 0, e₀) = e₁   …
-    ───────────────────────────
-    …
-
+```
+…   ↑(1, y, 0, e₀) = e₁   …
+───────────────────────────
+…
+```
 
 All of the following rules cover expressions that can bind variables:
 
